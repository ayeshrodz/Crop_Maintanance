package app_server
public
	with iot; -- IMPORT 

	system ApplicationServerSystem
	end ApplicationServerSystem;

	system implementation ApplicationServerSystem.with_devices
		subcomponents
			application_server: device ApplicationServer;
			app_server_controller: process AppServerController;
			bus_conn: bus HWConnection;
			iot_device: device iot::IOTDevice;
			app_server_processor: processor AppServerProcessor;
		connections
			app_server_controller_data_conn: port app_server_controller.post_data -> application_server.get_data;
			app_server_controller_event_conn: port app_server_controller.post_event -> application_server.get_event;

			sensor_data_conn: port iot_device.post_data -> app_server_controller.get_sensor_data;
			sensor_state_conn: port iot_device.post_data -> app_server_controller.get_sensor_state;
			sensor_battery_conn: port iot_device.post_data -> app_server_controller.get_sensor_battery_level;

			app_server_processor_bus: bus access bus_conn -> app_server_processor.bus_access;
--			iot_device_bus: bus access bus_conn -> iot_device.bus_access;
			app_server_bus: bus access bus_conn -> application_server.bus_access;
	end ApplicationServerSystem.with_devices;
	
	-- SERVER DEVICE
	device ApplicationServer
		features
			get_data: in event port;
			get_event: in event port;
			write_sensor_data: out event port;
			write_sensor_state_log: out event port;
			write_notifications: out event port;
			invoke_db_procedure: out event port;
			bus_access: requires bus access HWConnection;
	end ApplicationServer;
	device implementation ApplicationServer.impl
	end ApplicationServer.impl;
	
	device DatabaseServer
	end DatabaseServer;
	device implementation DatabaseServer.impl
	end DatabaseServer.impl;
		
	
	-- CONTROLLER
	process AppServerController
	features
		get_sensor_data: in event port;
		get_sensor_state: in event port;
		get_sensor_battery_level: in event port;
		post_data: out event port;
		post_event: out event port;
	end AppServerController;
	process implementation AppServerController.with_threads
	end AppServerController.with_threads;
	
	-- APPLICATION SERVER PROCESSOR IMPLEMENTATION
	processor AppServerProcessor
		features
			bus_access: requires bus access HWConnection;
	end AppServerProcessor;
	processor implementation AppServerProcessor.impl
		subcomponents
			app_server_ram: memory AppServerRAM;
	end AppServerProcessor.impl;
	memory AppServerRAM
	end AppServerRAM;
	
	
	-- DATA BUS DEFINITION
	bus HWConnection
	end HWConnection;
	bus implementation HWConnection.impl
	end HWConnection.impl;
	
	
	
	
	
	
end app_server;